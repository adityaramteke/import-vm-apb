apiVersion: v1
kind: Template
metadata:
  name: {{ vm_name }}-template
  namespace: openshift
  annotations:
    description: "OCP KubeVirt Linux VM template"
    tags: "kubevirt,ocp,template,linux,virtualmachine"
    iconClass: icon-other-linux
  labels:
    kubevirt.io/os: linux
    template.cnv.io/type: vm
    miq.github.io/kubevirt-is-vm-template: "true"
    import-vm-apb/transaction_id: "{{ _apb_service_instance_id }}"

objects:
- apiVersion: kubevirt.io/v1alpha2
  kind: VirtualMachine
  metadata:
    name: ${NAME}
    labels:
      kubevirt.io/vm: ${NAME}
  spec:
    dataVolumeTemplates:
    - metadata:
        name: vm-${NAME}-dv-01
      spec:
        pvc:
{% if storage_class is defined %}
          storageClassName: {{ storage_class }}
{% endif %}
          accessModes:
          - ReadWriteOnce
          resources:
            requests:
              storage: {{ disk_size_bytes }}
        source:
          pvc:
            namespace: "{{ namespace }}"
            name: "{{ image_type }}-{{ vm_name }}-dv-01"
    running: false
    template:
      metadata:
        labels:
          kubevirt.io/vm: {{ vm_name }}
      spec:
        terminationGracePeriodSeconds: 0
        domain:
          cpu:
            cores: ${{'{{'}}CPU_CORES{{'}}'}}
          machine:
            type: q35
          resources:
            requests:
              memory: ${MEMORY}
          devices:
            disks:
            - name: disk0
              disk:
                bus: {{ disk_bus }}
              volumeName: "${NAME}-datavolume"
        volumes:
        - dataVolume:
            name: "vm-${NAME}-dv-01"
          name: "${NAME}-datavolume"
parameters:
- name: NAME
  description: Name for the new VM
- name: MEMORY
  description: Amount of memory
  value: {{ mem }}{{ mem_unit }}
- name: CPU_CORES
  description: Amount of cores
  value: "{{ nr_cores }}"
