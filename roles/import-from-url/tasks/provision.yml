---
- name: Change project to {{ namespace }}
  command: "oc project {{ namespace }}"

- name: Target is VM?
  set_fact:
    image_type: vm
  when: _apb_plan_id == 'url'

- name: Target is Template?
  set_fact:
    image_type: template
  when: _apb_plan_id == 'url-template'
  
- name: Login As Super User
  command: "oc login --insecure-skip-tls-verify=true -u {{ admin_user }} -p {{ admin_password }}"
  when: cluster == "openshift" and image_type == "template"

# Before doing anything check if the PVC already exists, if it
# does, then don't waste the effor to look stuff up as it will
# We want to look for PVC and not DVs because DVs are just an abstraction on top of PVCs and
# the real thing to check for are the PVCs
# fail.
- name: Check for existing PVC
  command: "oc get pvc {{image_type}}-{{ vm_name }}-dv-01"
  register: pvc_exists
  # This looks odd, the oc command queries for the pvc, and we continue if there is
  # an error (it can't find the pvc) and no stdout output. This won't solve a race
  # condition, but its a useful first check regardless.
  failed_when: pvc_exists.stdout != ""

- name: Get content metadata
  uri:
    url: "{{ disk_image_url }}"
    method: HEAD
  register: response

- name: Calculate DV size
  set_fact:
    # Use 4% FS overhead based on this research
    # https://rwmj.wordpress.com/2009/11/08/filesystem-metadata-overhead/
    size_bytes: "{{ (response.content_length|int * 1.04)|int }}"
  when: disk_size_gb == 0

- name: Calculate DV size
  set_fact:
    size_bytes: "{{ (disk_size_gb|int * 1073741824 * 1.04)|int }}"
  when: disk_size_gb != 0

- name: Build Template DV
  block:
    - name: Create DV yaml
      template:
        src: cdi-dv.yml
        dest: /tmp/dv.yml
    - name: Debug generated DV
      command: cat /tmp/dv.yml
      register: debug_out
    - name: Show generated DV
      debug:
        msg: "{{ debug_out.stdout }}"
    - name: Provision DV
      command: "oc create -f /tmp/dv.yml"
  when: image_type == "template"

- name: Set disk_bus
  set_fact:
     disk_bus: "{{ disk_bus_by_os_type[os_type] }}"

- name: Set disk_size_bytes
  set_fact:
    disk_size_bytes: "{{ size_bytes }}"

- name: Build VM resources
  template:
    src: "{{ role_path }}/../../templates/{{ os_type }}-{{ image_type }}.j2"
    dest: /tmp/vm-resources.yml

- name: Provision VM resources
  command: "oc create -f /tmp/vm-resources.yml"
  
- name: Relist template broker count
  block:
    - name: Get current relist count"
      command: "oc get clusterservicebroker template-service-broker -o jsonpath='{.spec.relistRequests}'"
      register: current_relist_count
    - command: "oc patch clusterservicebroker template-service-broker -p '{\"spec\": {\"relistRequests\": {{ current_relist_count.stdout|int + 1 }} }}'"
      ignore_errors: yes
  when: image_type == "template"

