---
- include: "login.yml"

# Before doing anything check if the PVC already exists, if it
# does, then don't waste the effor to look stuff up as it will
# fail.
- name: Check for existing PVC
  command: "oc get pvc {{ vm_name }}-disk-01"
  register: pvc_exists
  # This looks odd, the oc command queries for the pvc, and we continue if there is
  # an error (it can't find the PVC) and no stdout output. This won't solve a race
  # condition, but its a useful first check regardless.
  failed_when: pvc_exists.stdout != ""

- name: Get content metadata
  uri:
    url: "{{ disk_image_url }}"
    method: HEAD
  register: response

- name: Calculate PVC size
  set_fact:
    # Use 4% FS overhead based on this research
    # https://rwmj.wordpress.com/2009/11/08/filesystem-metadata-overhead/
    size_bytes: "{{ (response.content_length|int * 1.04)|int }}"
  when: disk_size_gb == 0

- name: Calculate PVC size
  set_fact:
    size_bytes: "{{ (disk_size_gb|int * 1073741824 * 1.04)|int }}"
  when: disk_size_gb != 0

- name: Build PVC
  template:
    src: cdi-pvc.yml
    dest: /tmp/pvc.yml

- name: Debug generated pvc
  command: cat /tmp/pvc.yml
  register: debug_out
- name: Show generated pvc
  debug:
    msg: "{{ debug_out.stdout }}"

- name: Provision PVC
  command: "oc create -f /tmp/pvc.yml"

- name: set pvc status jsonpath selectors
  set_fact:
    import_status_path: .metadata.annotations.kubevirt\.io/storage\.import\.pod\.phase
    pvc_status_path: .status.phase

- Name: Check PVC bound status
  command: "oc get pvc {{ vm_name }}-disk-01 -o jsonpath='{ {{pvc_status_path}} }'"
  register: pvc_bound_status
  until: pvc_bound_status.stdout == 'Bound'
  retries: 60
  delay: 3

- name: Pod Import Status
  command: "oc get pvc {{ vm_name }}-disk-01 -o jsonpath='{ {{import_status_path}} }'"
  register: import_status
  # The values of import_status follow standard kubernetes pod phase values. Pending/Running/Succeeded/Failed/Unknown
  # The importer POD will update the status.
  until: import_status.stdout == 'Succeeded' or import_status.stdout == 'Failed'
  retries: 17280 # This equates to a day of retries. It could take a while to import the disk, so give it a long timeout.
  delay: 5

- fail:
    msg: "Unable to import image into PVC, check importer pod log for details."
  when: import_status.stdout != 'Succeeded'

- name: Set pvc_name
  set_fact:
    pvc_name: "{{ vm_name }}-disk-01"

- name: Set disk_bus
  set_fact:
     disk_bus: "{{ disk_bus_by_os_type[os_type] }}"

- name: Set disk_size_bytes
  set_fact:
    disk_size_bytes: "{{ size_bytes }}"

- name: Build VM resources
  template:
    src: "{{ role_path }}/../../templates/{{ os_type }}-{{ image_type }}.j2"
    dest: /tmp/vm-resources.yml

- name: Provision VM resources
  command: "oc create -f /tmp/vm-resources.yml"
